
#!/usr/bin/python3

__author__="morgoth314"
__license__="MIT License"
__version__="1.0"
__email__="morgoth314@gmail.com"
__status__="complete"
__date__="2015-5-10"
__api__="https://github.com/4chan/4chan-API"

import json
import codecs
import urllib.request
import os
import sys
import time
def main():
	
	#setting up board and thread number, regardless of
	#command line order and also allowing no command line
	#inputs
	try:
		inp1=sys.argv[1]
		inp2=sys.argv[2]
		inp=True
	except IndexError:
		inp=False
		#help dialog if user enters -h or --help from
		#the command line
		if sys.argv[1].strip()=="-h" or sys.argv[1].strip()=="--help":
			print("\n\ngive the program the board abbreviation and thread number either as command line arguments or when prompted\n")
			sys.exit(1)
	if inp:
		try:
			number=int(inp1)
			board=inp2.strip()
		except ValueError:
			number=int(inp2)
			board=inp1.strip()
		number=str(number)

	else:
		board=input("board?:\t").strip()
		number=input("thread number?:\t").strip()


	#retrieving the json of the thread using 4chan API
	try:
		data=json.load(codecs.getreader("utf-8")(urllib.request.urlopen("http://a.4cdn.org/"+board+"/thread/"+number+".json")))
	except urllib.error.HTTPError:
		print("thread not found, exiting...")
		sys.exit(1)

	#notifying user of what's being downloaded
	print("Downloading http://boards.4chan.org/"+board+"/thread/"+number+" -- "+data["posts"][0]["semantic_url"]+'\n')

	#creating a folder to store downloaded files
	#only try twice if name collisions
	fol=data["posts"][0]["semantic_url"]
	try:
		os.mkdir(fol)
	except FileExistsError:
		try:
			fol+="-4chdl"
			os.mkdir(fol)
		except FileExistsError:
			print("Folder name collision...\nExiting...")
			sys.exit(1)
	os.chdir(fol)

	#download all the files using 4chan API
	#also keep track of which posts have already been downloaded
	for i in data["posts"]:
		if "fsize" in i:
			lastpost=i["no"]
			with open(i["filename"]+i["ext"],"wb") as file:
				file.write(urllib.request.urlopen("https://i.4cdn.org/"+board+'/'+str(i["tim"])+i["ext"]).read())
	#after downloading all the files, wait 2 minutes before checking for new posts
	#only stop when image limit reached, thread 404s, thread archives/closes
	#, or keyboard interrupt
	while(True):
		print(".. ")
		time.sleep(120)
		try:
			data=json.load(codecs.getreader("utf-8")(urllib.request.urlopen("http://a.4cdn.org/"+board+"/thread/"+number+".json")))
		except urllib.error.HTTPError:
			print("Thread can't be found anymore, exiting...")
			sys.exit(1)
		for i in data["posts"]:
			if i["no"]>lastpost:
				if "fsize" in i:
					lastpost=i["no"]
					with open(i["filename"]+i["ext"],"wb") as file:
		                                file.write(urllib.request.urlopen("https://i.4cdn.org/"+board+'/'+str(i["tim"])+i["ext"]).read())
		if data["posts"][0]["imagelimit"]:
			print("image limit reached, exiting...")
			sys.exit(1)
		try:
			if (data["posts"][0]["closed"] or data["posts"][0]["archived"]):
				print("thread is closed/archived, exiting...")
				sys.exit(1)
		except KeyError:
			pass

if __name__=="__main__":
	try:
		main()
	except KeyboardInterrupt:
		print("User exit with keyboard interrupt, exiting...")
		sys.exit(1)
	except:
		raise
