#!/usr/bin/python3

__author__="distcoll"
__license__="MIT License"
__api__="https://github.com/4chan/4chan-API"

import argparse
import requests
import os
import sys
import time

#parse the arguments given at the command line
parser=argparse.ArgumentParser()
parser.add_argument("board",type=str,help="The board of the thread being downloaded")
parser.add_argument("number",type=int,help="The thread's number")
parser.add_argument("-c","--continuous",action="store_true",help="Use this flag if you want the script to monitor the thread until the thread expires")
args=parser.parse_args()
number=str(args.number)
board=args.board

def main():
	#retrieving the json of the thread using 4chan API
	data=requests.get("http://a.4cdn.org/"+board+"/thread/"+number+".json")

	#notifying user of what's being downloaded
	print("Downloading http://boards.4chan.org/"+board+"/thread/"+number+" -- "+data.json()["posts"][0]["semantic_url"]+'\n')

	#creating a folder to store downloaded files
	#only try twice if name collisions in continous mode
	#if in single mode, go into the existing folder
	fol=data.json()["posts"][0]["semantic_url"]

	if os.path.exists(fol):
		if args.continuous:
			fol+="-4chdl"
			try:
				os.mkdir(fol)
			except OSError:
				print("Folder name collision....\nExiting...")
				sys.exit(1)
	else:
		os.mkdir(fol)
	os.chdir(fol)

	#download all the files using 4chan API
	#also keep track of which posts have already been downloaded
	for i in data.json()["posts"]:
		if "fsize" in i:
			lastpost=i["no"]
			with open(i["filename"]+i["ext"],"wb") as file:
				pic=requests.get("https://i.4cdn.org/"+board+'/'+str(i["tim"])+i["ext"])
				for part in pic.iter_content(4096):
					file.write(part)
	#after downloading all the files, wait 2 minutes before checking for new posts
	#only stop when image limit reached, thread 404s, thread archives/closes
	#, or keyboard interrupt
	while(args.continuous):
		print(".. ")
		time.sleep(120)
		try:
			data=requests.get("http://a.4cdn.org/"+board+"/thread/"+number+".json")
		except:
			print("Thread can't be found anymore, exiting...")
			sys.exit(1)
		for i in data.json()["posts"]:
			if i["no"]>lastpost:
				if "fsize" in i:
					lastpost=i["no"]
					with open(i["filename"]+i["ext"],"wb") as file:
						pic=requests.get("https://i.4cdn.org/"+board+'/'+str(i["tim"])+i["ext"])
						for part in pic.iter_content(4096):
							file.write(part)
		try:
			if data.json()["posts"][0]["imagelimit"]:
				print("image limit reached, exiting...")
				sys.exit(1)
		except KeyError:
			pass
		try:
			if (data.json()["posts"][0]["closed"] or data["posts"][0]["archived"]):
				print("thread is closed/archived, exiting...")
				sys.exit(1)
		except KeyError:
			pass

if __name__=="__main__":
	try:
		main()
	except KeyboardInterrupt:
		print("User exit with keyboard interrupt, exiting...")
		sys.exit(1)
	except:
		raise
